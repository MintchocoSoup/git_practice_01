Shell
 ┗ 리눅스 커널과 사용자를 연결해주는 인터페이스
 ┗ 유저의 입력을 읽고, 해석하고, 프로그램을 실행
 - Shell Script : 일련의 명령행을 한 파일에 담아놓은 것 (운영체제마다 다름)
 - 리눅스 운영체제의 표준인 Bash (Bourne again shell)

문법 : 
<프로그램명> <내용> (space로 구분)
 - echo : 셸 명령, 내장(빌트인) 명령, 프로그램
   ┗ 화면에 출력하는 명령
 - 변수 : <변수명>=<내용> (호출시엔 $<변수명>)  ※space 주의
 - " " 사용가능
 - 내장되어있는 변수도 존재 (이 변수들은 모두 대문자로 지정되어있음)

명령
 - 프로그램 자체 ex) echo
 - 단순명령(simple command) : 프로그램 + 내용
 - 결합명령(combined command) : 프로그램 + 옵션 + 내용 (space로 각각 연결한다)
    ┗ 프로그램을 구체화하는 역할
    ┗ '-h' -> 명령인자
    ┗ "ls -l" -> 리스트를 1라인으로 출력 (-l : 옵션)
    ┗ 옵션 : -? ex) -1(1라인으로 출력), -h, -x, -l(라인별로 출력), ···
     - ls : list //폴더안의 내용을 리스트 출력
        ┗ cd : change directory
     - | : 파이프
       ┗ 명령행 | 명령행 
        -  less
           ┗ 이전 명령행의 출력값을 다음 명령행의 입력값으로 보내는 역할
           ┗ 'echo $PATH | less'
        - 파이프라인 : 파이프라인으로 연결한 명령행
          
     - wc, head, cut, grep, sort, uniq ★다음주 퀴즈 예정

 - 명령의 특징
    - 한 프로그램이 한 가지 일만 한다.
    - 명령의 조합을 잘 해야 한다. (명령어 개많음. 구글링 ㅅㅅ 사용만 할 줄 알면 됨.)
 
입력
 - stdin : standard input/in. 표준 입력
 - 프롬프트를 통해서 입력되는 입력스트림

출력
 - stdout : standard output/out. 표준 출력
 - 출력스트림



1. wc
 - 파일 내용의 줄(line) 수, 단어(word) 수, 문자(char) 수 출력하는 명령
q) wc로 이 파일(t.txt) 내용 출력하기 => wc t.txt
q) 지금 디렉토리의 하위 디렉토리 내용의 줄 수, 단어 수, 문자 수 출력하기 => ls | wc
 - 명령인자
   ┗ -w : 단어 수만
   ┗ -l : 줄 수만
   ┗ -c : 문자 수만
q) t.txt 의 단어수adsfasdf
wq!

